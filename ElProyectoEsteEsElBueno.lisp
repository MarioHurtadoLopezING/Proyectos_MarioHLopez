(defun main (lista)
  (let ((tam (length lista)))
    (if (<= tam 1)
        lista
      (let ((seq1 (main (dividir lista)))
            (seq2 (main (dividir2 lista))))
        (merSort seq1 seq2)
        )
      )
    )
  )
;--------------------------------------------
(defun dividir (lista &optional (cont 0))
  (let ((tam (length lista)))
    (let ((frente (car lista)))
      (let ((mitad (/ tam 2)))
        (if (< cont mitad)
            (cons frente (dividir (cdr lista) (+ 1 cont)))
          )
        )
      )
    )
  )      

;---------------------------------------------
(defun dividir2 (lista &optional (cont 0))
  (let ((tam (length lista)))
    (let ((frente (car lista)))
      (let ((mitad (/ tam 2)))
        (if (< cont mitad)
            (dividir2 (cdr lista) (+ 1 cont))
          (if (< cont tam)
              (cons frente (dividir2 (cdr lista) (+ 1 cont)))
            lista
            )
          )
        )
      )
    )
  )                                       
;---------------------------------------------
(defun merSort (lista1 lista2)
  (let ((frente1 (car lista1))(frente2 (car lista2)))
    (if (or (not lista1) (not lista2))
     ;(aqui va lo que me falta "la funcion de si ya acabo")
        (append lista1 lista2)
      (if (> frente1 frente2)
          (cons frente2 (mersort lista1 (cdr lista2)))
        (if (< frente1 frente2)
            (cons frente1 (mersort (cdr lista1) lista2)) 
          (if (= frente1 frente2)
              (cons frente1 (mersort (cdr lista1) (cdr lista2)))
            ) 
          )
        )
      )
    )
  )
